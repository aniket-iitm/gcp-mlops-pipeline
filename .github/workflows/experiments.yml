name: Data Poisoning Experiments

on:
  push:
    branches:
      - dev

jobs:
  run-poisoning-experiment:
    strategy:
      matrix:
        poison_level: [0, 5, 10, 50] # The % we want to test

    runs-on: ubuntu-latest

    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Dependencies
      run: pip install -r requirements.txt
    
    - name: Poison the data (${{ matrix.poison_level }}%)
      run: |
        # Convert the integer percentage to a float (e.g., 5 -> 0.05)
        level_float=$(echo "${{ matrix.poison_level }} / 100" | bc -l)
        python poison_data.py --level $level_float

    - name: Run training script on poisoned data
      run: python train.py --data-path data/iris_poisoned.csv
      
    - name: ✅ Run validation tests
      id: validation
      continue-on-error: true
      run: python -m pytest --verbose > report.md

    - name: 📊 Generate Visual Plots
      run: python generate_plots.py --poison-level ${{ matrix.poison_level }}

    - name: 📝 Generate CML Report with Plots
      env:
        REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Create the report title
        echo "## 🧪 Validation Results for ${{ matrix.poison_level }}% Poisoned Data" > report.md
        
        if [[ "${{ steps.validation.outcome }}" == "success" ]]; then
          echo "✅ **Validation Passed**" >> report.md
        else
          echo "❌ **Validation Failed** (As expected for poisoned data)" >> report.md
        fi
        
        # --- NEW: Add the plots to the report using Markdown ---
        echo "### Model Accuracy" >> report.md
        echo "![Accuracy Chart](plots/accuracy_chart_${{ matrix.poison_level }}.png)" >> report.md
        
        echo "### Confusion Matrix" >> report.md
        echo "![Confusion Matrix](plots/confusion_matrix_${{ matrix.poison_level }}.png)" >> report.md
        
        # Install CML and post the report
        npm install -g @dvcorg/cml
        cml comment create --commit-sha ${{ github.sha }} report.md

