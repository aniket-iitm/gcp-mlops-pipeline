name: Data Poisoning Experiments

on:
  push:
    branches:
      - dev

jobs:
  # --- JOB 1: RUN THE EXPERIMENTS IN PARALLEL ---
  run-poisoning-experiment:
    strategy:
      # This ensures all matrix jobs run to completion, even if one fails.
      fail-fast: false
      matrix:
        poison_level: [0, 5, 10, 50]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: 🧪 Poison the data (${{ matrix.poison_level }}%)
        run: |
          source .venv/bin/activate
          level_float=$(echo "${{ matrix.poison_level }} / 100" | bc -l)
          python poison_data.py --level $level_float

      - name: 🏋️ Run training script
        run: |
          source .venv/bin/activate
          python train.py --data-path data/iris_poisoned.csv
      
      - name: ✅ Run validation tests & generate results
        # This is a critical fix. It ensures that even if pytest fails (which we expect),
        # the subsequent steps in this job will still run.
        continue-on-error: true
        run: |
          source .venv/bin/activate
          python -m pytest --verbose

      - name: 📊 Generate Visual Plots
        run: |
          source .venv/bin/activate
          python generate_plots.py --poison-level ${{ matrix.poison_level }}
      
      - name: Upload experiment artifacts
        uses: actions/upload-artifact@v4
        with:
          name: experiment-results-${{ matrix.poison_level }}
          path: |
            plots/
            metrics.txt
            test_results.json

  # --- JOB 2: PUBLISH THE FINAL, COMBINED REPORT ---
  publish-report:
    # This job runs only after all matrix jobs in 'run-poisoning-experiment' are finished.
    needs: run-poisoning-experiment
    # This is a critical fix. It ensures this job runs even if some of the
    # experiment jobs failed (which is our expected outcome).
    if: always()
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all experiment artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-results/
      
      - name: 📝 Generate Final CML Report
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Start the Markdown report
          echo "## 🧪 Data Poisoning Experiment Summary" > report.md
          echo "This report shows the impact of label poisoning on the Iris classifier's accuracy." >> report.md
          
          # Create the comparison table header
          echo "" >> report.md
          echo "| Poison Level | Accuracy | Validation Status |" >> report.md
          echo "|--------------|----------|-------------------|" >> report.md # Fixed table header
          
          # Loop through each experiment result to build the table
          for level in 0 5 10 50; do
            METRICS_FILE="all-results/experiment-results-${level}/metrics.txt"
            if [ -f "$METRICS_FILE" ]; then
              ACCURACY=$(cat $METRICS_FILE | awk -F': ' '{print $2}')
              # Check if accuracy is above the 0.85 threshold
              STATUS_ICON="✅ Passed"
              if (( $(echo "$ACCURACY < 0.85" | bc -l) )); then
                STATUS_ICON="❌ Failed"
              fi
              echo "| **${level}%** | ${ACCURACY} | ${STATUS_ICON} |" >> report.md
            fi
          done
          
          # Add the plots for each experiment in a collapsible section
          for level in 0 5 10 50; do
            CM_PATH="all-results/experiment-results-${level}/plots/confusion_matrix_${level}.png"
            ACC_PATH="all-results/experiment-results-${level}/plots/accuracy_chart_${level}.png"
            if [ -f "$CM_PATH" ]; then
              echo "" >> report.md
              echo "<details><summary><strong>📊 Plots for ${level}% Poisoning</strong></summary>" >> report.md
              echo "" >> report.md
              echo "#### Model Accuracy" >> report.md
              echo "![Accuracy Chart](${ACC_PATH})" >> report.md
              echo "#### Confusion Matrix" >> report.md
              echo "![Confusion Matrix](${CM_PATH})" >> report.md
              echo "" >> report.md
              echo "</details>" >> report.md
            fi
          done
          
          # Install CML and post the single, beautiful report to the specific commit
          npm install -g @dvcorg/cml
          cml comment create --commit-sha ${{ github.sha }} report.md